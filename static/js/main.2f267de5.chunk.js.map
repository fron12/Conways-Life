{"version":3,"sources":["components/Grid.js","components/Rules.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["Grid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beacon","ctx","refs","canvas","getContext","setState","7, 6","7, 7","8, 6","8, 7","9, 8","9, 9","10, 8","10, 9","fillStyle","fillRect","cellsState","x","y","defineProperty","concat","clearGrid","e","clearRect","width","height","gridInit","generation","pause","state","moveTo","lineTo","stroke","halfSpeed","speed","handleClick","inProgress","xcoord","Math","floor","offsetX","ycoord","offsetY","cell","console","log","loop","looping","setTimeout","play","requestAnimationFrame","normalSpeed","clearTimeout","buffer","objectSpread","livC","xVal","yVal","tlc","tc","trc","lc","rc","blc","bc","brc","penta","7, 5","7, 13","7, 14","8, 4","8, 12","8, 15","9, 4","9, 7","9, 12","9, 15","10, 4","10, 7","10, 12","10, 15","11, 5","11, 6","11, 13","11, 14","pulsar","4, 5","4, 6","4, 7","4, 11","4, 12","4, 13","6, 3","6, 8","6, 10","6, 15","7, 3","7, 8","7, 10","7, 15","8, 3","8, 8","8, 10","9, 5","9, 6","9, 11","9, 13","11, 7","11, 11","11, 12","12, 3","12, 8","12, 10","12, 15","13, 3","13, 8","13, 10","13, 15","14, 3","14, 8","14, 10","14, 15","16, 5","16, 6","16, 7","16, 11","16, 12","16, 13","twiceSpeed","addEventListener","react_default","a","createElement","className","ref","onClick","Component","Rules","History","App","Grid_Grid","components_Rules","components_History","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gSAGqBA,qBACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAWVQ,OAAS,WACL,IACMC,EADSR,EAAKS,KAAKC,OACNC,WAAW,MAC9BX,EAAKY,SAAS,CAIVC,OAAQ,QACRC,OAAQ,QACRC,OAAQ,QACRC,OAAQ,QACRC,OAAQ,QACRC,OAAQ,QACRC,QAAS,QACTC,QAAS,UAEbZ,EAAIa,UAAY,QAChBb,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,KApCftB,EAuCnBuB,WAAa,WACT,IAAI,IAAIC,EAAI,EAAGA,GAAK,IAAKA,GAAG,GACxB,IAAI,IAAIC,EAAI,EAAGA,GAAI,IAAKA,GAAG,GACvBzB,EAAKY,SAALX,OAAAyB,EAAA,EAAAzB,CAAA,MAAA0B,OACQH,EAAE,GADV,MAAAG,OACiBF,EAAE,IAAO,WA3CnBzB,EAiDnB4B,UAAY,SAACC,GACT,IAAMnB,EAASV,EAAKS,KAAKC,OACbA,EAAOC,WAAW,MAC1BmB,UAAU,EAAG,EAAGpB,EAAOqB,MAAOrB,EAAOsB,QACzChC,EAAKiC,WACLjC,EAAKuB,aACLvB,EAAKY,SAAS,CAACsB,WAAY,IAE3BlC,EAAKmC,SAzDUnC,EAoEnBiC,SAAW,WACP,IACMzB,EADSR,EAAKS,KAAKC,OACNC,WAAW,MAC9BH,EAAIE,OAAOqB,MAAQ/B,EAAKoC,MAAML,MAC9BvB,EAAIE,OAAOsB,OAAShC,EAAKoC,MAAMJ,OAC/B,IAAI,IAAIR,EAAI,EAAGA,GAAK,IAAKA,GAAG,GACxB,IAAI,IAAIC,EAAI,EAAGA,GAAI,IAAKA,GAAG,GACvBjB,EAAI6B,OAAOb,EAAG,GACdhB,EAAI8B,OAAOd,EAAG,KACdhB,EAAI+B,SACJ/B,EAAI6B,OAAO,EAAGZ,GACdjB,EAAI8B,OAAO,IAAKb,GAChBjB,EAAI+B,UAhFGvC,EAqFnBwC,UAAY,WACRxC,EAAKY,SAAS,CAAC6B,MAAO,OAtFPzC,EAyFnB0C,YAAc,SAACb,GACX,IAA6B,IAA1B7B,EAAKoC,MAAMO,WAAsB,CAChC,IACMnC,EADSR,EAAKS,KAAKC,OACNC,WAAW,MAE1BiC,EAASC,KAAKC,MAAMjB,EAAEkB,QAAU,IAChCC,EAASH,KAAKC,MAAMjB,EAAEoB,QAAU,IAChCC,EAAI,GAAAvB,OAAMiB,EAAN,MAAAjB,OAAiBqB,GAEI,UAA1BhD,EAAKoC,MAAL,GAAAT,OAAcuB,IACblD,EAAKY,SAALX,OAAAyB,EAAA,EAAAzB,CAAA,MAAA0B,OAAmBuB,GAAS,UAEE,UAA1BlD,EAAKoC,MAAL,GAAAT,OAAcuB,KAClBlD,EAAKY,SAALX,OAAAyB,EAAA,EAAAzB,CAAA,MAAA0B,OAAmBuB,GAAS,UAEhC1C,EAAIa,UAAYrB,EAAKoC,MAAL,GAAAT,OAAcuB,IAC9B1C,EAAIc,SAAsC,GAA7BuB,KAAKC,MAAMjB,EAAEkB,QAAU,IAAsC,GAA5BF,KAAKC,MAAMjB,EAAEoB,QAAU,IAAS,GAAI,IAClFE,QAAQC,IAAIpD,EAAKoC,MAAL,GAAAT,OAAcuB,KAC1BC,QAAQC,IAAIpD,EAAKoC,SA3GNpC,EA+GnBqD,KAAO,SAACxB,GAGA7B,EAAKY,SAAS,CAAC0C,QAASC,WAAW,WAC/BvD,EAAKwD,OACLC,sBAAsBzD,EAAKqD,OAC5BrD,EAAKoC,MAAMK,UArHHzC,EA2HnB0D,YAAc,WACV1D,EAAKY,SAAS,CAAC6B,MAAO,OA5HPzC,EA+HnBmC,MAAQ,SAACN,GACL7B,EAAKY,SAAS,CAAC+B,YAAY,IAC3BgB,aAAa3D,EAAKoC,MAAMkB,UAjITtD,EAoInBwD,KAAO,SAAC3B,GACJ,IACMrB,EADSR,EAAKS,KAAKC,OACNC,WAAW,MAC9BX,EAAKY,SAAS,CAAC+B,YAAY,IAE3B,IAAIiB,EAAM3D,OAAA4D,EAAA,EAAA5D,CAAA,GAAOD,EAAKoC,OACtBe,QAAQC,IAAIQ,GACZ,IAAI,IAAIpC,EAAI,EAAGA,GAAK,IAAKA,GAAG,GACxB,IAAI,IAAIC,EAAI,EAAGA,GAAI,IAAKA,GAAG,GAAG,CAC1B,IAAIqC,EAAO,EACPC,EAAQvC,EAAI,GACZwC,EAAQvC,EAAI,GACZyB,EAAI,GAAAvB,OAAMoC,EAAN,MAAApC,OAAeqC,GACnBC,EAAG,GAAAtC,OAAMoC,EAAO,EAAb,MAAApC,OAAmBqC,EAAO,GAC7BE,EAAE,GAAAvC,OAAMoC,EAAN,MAAApC,OAAeqC,EAAO,GACxBG,EAAG,GAAAxC,OAAMoC,EAAO,EAAb,MAAApC,OAAmBqC,EAAO,GAC7BI,EAAE,GAAAzC,OAAMoC,EAAO,EAAb,MAAApC,OAAmBqC,GACrBK,EAAE,GAAA1C,OAAMoC,EAAO,EAAb,MAAApC,OAAmBqC,GACrBM,EAAG,GAAA3C,OAAMoC,EAAO,EAAb,MAAApC,OAAmBqC,EAAO,GAC7BO,EAAE,GAAA5C,OAAMoC,EAAN,MAAApC,OAAeqC,EAAO,GACxBQ,EAAG,GAAA7C,OAAMoC,EAAO,EAAb,MAAApC,OAAmBqC,EAAO,GACV,UAApBhE,EAAKoC,MAAM6B,IACVH,IAEkB,UAAnB9D,EAAKoC,MAAM8B,IACVJ,IAEmB,UAApB9D,EAAKoC,MAAM+B,IACVL,IAEkB,UAAnB9D,EAAKoC,MAAMgC,IACVN,IAEkB,UAAnB9D,EAAKoC,MAAMiC,IACVP,IAEmB,UAApB9D,EAAKoC,MAAMkC,IACVR,IAEkB,UAAnB9D,EAAKoC,MAAMmC,IACVT,IAEmB,UAApB9D,EAAKoC,MAAMoC,IACVV,IAEoB,UAArB9D,EAAKoC,MAAMc,IAAqBY,EAAO,IACtCF,EAAOV,GAAQ,QACf1C,EAAIa,UAAYuC,EAAOV,GACvB1C,EAAIc,SAAgB,MAAPyC,EAAoB,GAANC,EAAU,KAAM,OAEvB,UAArBhE,EAAKoC,MAAMc,IAAqBY,EAAO,GACtCF,EAAOV,GAAQ,QACf1C,EAAIa,UAAYuC,EAAOV,GACvB1C,EAAIc,SAAgB,MAAPyC,EAAoB,GAANC,EAAU,KAAM,OAElB,UAArBhE,EAAKoC,MAAMc,IAA8B,IAATY,IACpCF,EAAOV,GAAQ,QACf1C,EAAIa,UAAYuC,EAAOV,GACvB1C,EAAIc,SAAgB,GAAPyC,EAAkB,GAAPC,EAAW,GAAI,KAInDhE,EAAKY,SAALX,OAAA4D,EAAA,EAAA5D,CAAA,GAAkB2D,EAAlB,CAA0B1B,WAAYlC,EAAKoC,MAAMF,WAAa,EAAGS,YAAY,MAlM9D3C,EAqMnByE,MAAQ,WACJ,IACMjE,EADSR,EAAKS,KAAKC,OACNC,WAAW,MAC9BX,EAAKY,SAAS,CAIV8D,OAAQ,QACR7D,OAAQ,QACR8D,QAAS,QACTC,QAAS,QACTC,OAAQ,QACR7D,OAAQ,QACR8D,QAAS,QACTC,QAAS,QACTC,OAAQ,QACRC,OAAQ,QACRC,QAAS,QACTC,QAAS,QACTC,QAAS,QACTC,QAAS,QACTC,SAAU,QACVC,SAAU,QACVC,QAAS,QACTC,QAAS,QACTC,SAAU,QACVC,SAAU,UAEdnF,EAAIa,UAAY,QAChBb,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,GAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,GAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,GAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,KArPhBtB,EAwPnB4F,OAAS,WACL,IACMpF,EADSR,EAAKS,KAAKC,OACNC,WAAW,MAC9BX,EAAKY,SAAS,CAIViF,OAAQ,QACRC,OAAQ,QACRC,OAAQ,QACRC,QAAS,QACTC,QAAS,QACTC,QAAS,QACTC,OAAQ,QACRC,OAAQ,QACRC,QAAS,QACTC,QAAS,QACTC,OAAQ,QACRC,OAAQ,QACRC,QAAS,QACTC,QAAS,QACTC,OAAQ,QACRC,OAAQ,QACRC,QAAS,QACT9B,QAAS,QACT+B,OAAQ,QACRC,OAAQ,QACR9B,OAAQ,QACR+B,QAAS,QACT9B,QAAS,QACT+B,QAAS,QACTzB,QAAS,QACTC,QAAS,QACTyB,QAAS,QACTC,SAAU,QACVC,SAAU,QACV1B,SAAU,QACV2B,QAAS,QACTC,QAAS,QACTC,SAAU,QACVC,SAAU,QACVC,QAAS,QACTC,QAAS,QACTC,SAAU,QACVC,SAAU,QACVC,QAAS,QACTC,QAAS,QACTC,SAAU,QACVC,SAAU,QACVC,QAAS,QACTC,QAAS,QACTC,QAAS,QACTC,SAAU,QACVC,SAAU,QACVC,SAAU,UAEd9H,EAAIa,UAAY,QAChBb,EAAIc,SAAS,GAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,GAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,GAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,GAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,GAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,GAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,GAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,GAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,GAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAM,GAAI,IAC7Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAM,IAAO,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,GAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,GAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,GAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAM,GAAI,IAC9Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,IAC/Bd,EAAIc,SAAS,IAAO,IAAO,GAAI,KAhWhBtB,EAmWnBuI,WAAa,WACTvI,EAAKY,SAAS,CAAC6B,MAAO,OAlWtBzC,EAAKoC,MAAQ,CACTL,MAAO,IACPC,OAAQ,IACRE,WAAY,EACZS,YAAY,EACZW,QAAS,GACTb,MAAO,KARIzC,mFA6Df,IAAMU,EAASP,KAAKM,KAAKC,OAEzBP,KAAK8B,WACLvB,EAAO8H,iBAAiB,QAASrI,KAAKuC,aACtCvC,KAAKoB,8CAuSL,OACIkH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,yBAAiBxI,KAAKiC,MAAMF,YAC5BuG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,IAAI,WAC/BJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKqD,MAAtB,aACAiF,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKkD,MAAtB,QACAoF,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKgC,OAAtB,SACAsG,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKyB,WAAtB,SACA6G,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKqC,WAAtB,cACAiG,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKuD,aAAtB,gBACA+E,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKoI,YAAtB,aAEJE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKI,QAAtB,UACAkI,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKyF,QAAtB,UACA6C,EAAAC,EAAAC,cAAA,UAAQG,QAAS3I,KAAKsE,OAAtB,2BA1XcsE,cCanBC,EAdD,WACV,OACIP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,gHACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,2GACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mKCMGM,EAfC,WACZ,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,skBCaGO,0LAXX,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACQ,EAAD,MACAV,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAACU,EAAD,cAPUN,cCMEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2f267de5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './grid.css'\r\n\r\nexport default class Grid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: 400,\r\n            height: 400,\r\n            generation: 0,\r\n            inProgress: false,\r\n            looping: '',\r\n            speed: 500,\r\n        };\r\n    }\r\n\r\n    beacon = () => {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        this.setState({\r\n            // let xVal = (x / 20);                      // X Value \r\n            // let yVal = (y / 20);                      // Y Value\r\n            // let cell = `${xVal}, ${yVal}`,\r\n            '7, 6': 'black',\r\n            '7, 7': 'black',\r\n            '8, 6': 'black',\r\n            '8, 7': 'black',\r\n            '9, 8': 'black',\r\n            '9, 9': 'black',\r\n            '10, 8': 'black',\r\n            '10, 9': 'black',\r\n        })\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(7*20, 6*20, 19, 19);\r\n        ctx.fillRect(7*20, 7*20, 19, 19);\r\n        ctx.fillRect(8*20, 6*20, 19, 19);\r\n        ctx.fillRect(8*20, 7*20, 19, 19);\r\n        ctx.fillRect(9*20, 8*20, 19, 19);\r\n        ctx.fillRect(9*20, 9*20, 19, 19);\r\n        ctx.fillRect(10*20, 8*20, 19, 19);\r\n        ctx.fillRect(10*20, 9*20, 19, 19);\r\n    }\r\n\r\n    cellsState = () => {\r\n        for(let x = 0; x <= 400; x+=20){\r\n            for(let y = 0; y<= 400; y+=20){\r\n                this.setState({\r\n                    [`${x/20}, ${y/20}`]: 'white'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    clearGrid = (e) => {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        this.gridInit();\r\n        this.cellsState();\r\n        this.setState({generation: 0});\r\n        // this.setState({inProgress: false});\r\n        this.pause();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const canvas = this.refs.canvas;\r\n        // const ctx = canvas.getContext('2d');\r\n        this.gridInit();\r\n        canvas.addEventListener('click', this.handleClick);\r\n        this.cellsState();\r\n    }\r\n\r\n    gridInit = () => {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.canvas.width = this.state.width;\r\n        ctx.canvas.height = this.state.height;\r\n        for(let x = 0; x <= 400; x+=20){\r\n            for(let y = 0; y<= 400; y+=20){\r\n                ctx.moveTo(x, 0);\r\n                ctx.lineTo(x, 400);\r\n                ctx.stroke();\r\n                ctx.moveTo(0, y);\r\n                ctx.lineTo(400, y);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    halfSpeed = () => {\r\n        this.setState({speed: 1000});\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        if(this.state.inProgress === false) {\r\n            const canvas = this.refs.canvas;\r\n            const ctx = canvas.getContext('2d');\r\n            // let position = canvas.getBoundingClientRect();\r\n            let xcoord = Math.floor(e.offsetX / 20);\r\n            let ycoord = Math.floor(e.offsetY / 20);\r\n            let cell = `${xcoord}, ${ycoord}`;\r\n            // this.setState({[`${cell}`]: 'black'});\r\n            if(this.state[`${cell}`] === 'white') {\r\n                this.setState({[`${cell}`]: 'black'});\r\n            }\r\n            else if(this.state[`${cell}`] === 'black') {\r\n                this.setState({[`${cell}`]: 'white'});\r\n            }\r\n            ctx.fillStyle = this.state[`${cell}`];\r\n            ctx.fillRect(Math.floor(e.offsetX / 20) * 20, Math.floor(e.offsetY / 20) *20, 19, 19);\r\n            console.log(this.state[`${cell}`]);\r\n            console.log(this.state);\r\n        }\r\n    }\r\n\r\n    loop = (e) => {\r\n        // this.setState({inProgress: true});\r\n        // if(this.state.inProgress){\r\n            this.setState({looping: setTimeout(() => {\r\n                this.play();\r\n                requestAnimationFrame(this.loop);\r\n            }, this.state.speed)\r\n            })\r\n        // }\r\n        // requestAnimationFrame(this.loop);\r\n    }\r\n\r\n    normalSpeed = () => {\r\n        this.setState({speed: 500});\r\n    }\r\n\r\n    pause = (e) => {\r\n        this.setState({inProgress: false});\r\n        clearTimeout(this.state.looping);\r\n    }\r\n\r\n    play = (e) => {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        this.setState({inProgress: true});\r\n        // this.setState({generation: this.state.generation + 1});\r\n        let buffer = {...this.state};\r\n        console.log(buffer);\r\n        for(let x = 0; x <= 400; x+=20){\r\n            for(let y = 0; y<= 400; y+=20){\r\n                let livC = 0;                             // Live Cells\r\n                let xVal = (x / 20);                      // X Value \r\n                let yVal = (y / 20);                      // Y Value\r\n                let cell = `${xVal}, ${yVal}`\r\n                let tlc = `${xVal - 1}, ${yVal - 1}`;     // Top Left Cell\r\n                let tc = `${xVal}, ${yVal - 1}`;          // Top Cell\r\n                let trc = `${xVal + 1}, ${yVal - 1}`;     // Top Right Cell\r\n                let lc = `${xVal - 1}, ${yVal}`;          // Left Cell\r\n                let rc = `${xVal + 1}, ${yVal}`;          // Right Cell\r\n                let blc = `${xVal - 1}, ${yVal + 1}`;     // Bottom Left Cell\r\n                let bc = `${xVal}, ${yVal + 1}`;          // Bottom Cell\r\n                let brc = `${xVal + 1}, ${yVal + 1}`;     // Bottom Right Cell\r\n                if(this.state[tlc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[tc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[trc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[lc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[rc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[blc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[bc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[brc] === 'black') {\r\n                    livC++;\r\n                }\r\n                if(this.state[cell] === 'black' && livC < 2) {\r\n                    buffer[cell] = 'white';\r\n                    ctx.fillStyle = buffer[cell];\r\n                    ctx.fillRect(xVal * 20.07, yVal *20, 18.9, 18.9)\r\n                }\r\n                if(this.state[cell] === 'black' && livC > 3) {\r\n                    buffer[cell] = 'white';\r\n                    ctx.fillStyle = buffer[cell];\r\n                    ctx.fillRect(xVal * 20.07, yVal *20, 18.9, 18.9)\r\n                }\r\n                else if(this.state[cell] === 'white' && livC === 3) {\r\n                    buffer[cell] = 'black';\r\n                    ctx.fillStyle = buffer[cell];\r\n                    ctx.fillRect(xVal * 20, yVal * 20, 20, 20)\r\n                }\r\n            }\r\n        }\r\n        this.setState({...buffer, generation: this.state.generation + 1, inProgress: true});\r\n    }\r\n\r\n    penta = () => {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        this.setState({\r\n            // let xVal = (x / 20);                      // X Value \r\n            // let yVal = (y / 20);                      // Y Value\r\n            // let cell = `${xVal}, ${yVal}`,\r\n            '7, 5': 'black',\r\n            '7, 6': 'black',\r\n            '7, 13': 'black',\r\n            '7, 14': 'black',\r\n            '8, 4': 'black',\r\n            '8, 7': 'black',\r\n            '8, 12': 'black',\r\n            '8, 15': 'black',\r\n            '9, 4': 'black',\r\n            '9, 7': 'black',\r\n            '9, 12': 'black',\r\n            '9, 15': 'black',\r\n            '10, 4': 'black',\r\n            '10, 7': 'black',\r\n            '10, 12': 'black',\r\n            '10, 15': 'black',\r\n            '11, 5': 'black',\r\n            '11, 6': 'black',\r\n            '11, 13': 'black',\r\n            '11, 14': 'black',\r\n        })\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(7*20, 5*20, 19, 19);\r\n        ctx.fillRect(7*20, 6*20, 19, 19);\r\n        ctx.fillRect(7*20, 13*20, 19, 19);\r\n        ctx.fillRect(7*20, 14*20, 19, 19);\r\n        ctx.fillRect(8*20, 4*20, 19, 19);\r\n        ctx.fillRect(8*20, 7*20, 19, 19);\r\n        ctx.fillRect(8*20, 12*20, 19, 19);\r\n        ctx.fillRect(8*20, 15*20, 19, 19);\r\n        ctx.fillRect(9*20, 4*20, 19, 19);\r\n        ctx.fillRect(9*20, 7*20, 19, 19);\r\n        ctx.fillRect(9*20, 12*20, 19, 19);\r\n        ctx.fillRect(9*20, 15*20, 19, 19);\r\n        ctx.fillRect(10*20, 4*20, 19, 19);\r\n        ctx.fillRect(10*20, 7*20, 19, 19);\r\n        ctx.fillRect(10*20, 12*20, 19, 19);\r\n        ctx.fillRect(10*20, 15*20, 19, 19);\r\n        ctx.fillRect(11*20, 5*20, 19, 19);\r\n        ctx.fillRect(11*20, 6*20, 19, 19);\r\n        ctx.fillRect(11*20, 13*20, 19, 19);\r\n        ctx.fillRect(11*20, 14*20, 19, 19);\r\n    }\r\n\r\n    pulsar = () => {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        this.setState({\r\n            // let xVal = (x / 20);                      // X Value \r\n            // let yVal = (y / 20);                      // Y Value\r\n            // let cell = `${xVal}, ${yVal}`,\r\n            '4, 5': 'black',\r\n            '4, 6': 'black',\r\n            '4, 7': 'black',\r\n            '4, 11': 'black',\r\n            '4, 12': 'black',\r\n            '4, 13': 'black',\r\n            '6, 3': 'black',\r\n            '6, 8': 'black',\r\n            '6, 10': 'black',\r\n            '6, 15': 'black',\r\n            '7, 3': 'black',\r\n            '7, 8': 'black',\r\n            '7, 10': 'black',\r\n            '7, 15': 'black',\r\n            '8, 3': 'black',\r\n            '8, 8': 'black',\r\n            '8, 10': 'black',\r\n            '8, 15': 'black',\r\n            '9, 5': 'black',\r\n            '9, 6': 'black',\r\n            '9, 7': 'black',\r\n            '9, 11': 'black',\r\n            '9, 12': 'black',\r\n            '9, 13': 'black',\r\n            '11, 5': 'black',\r\n            '11, 6': 'black',\r\n            '11, 7': 'black',\r\n            '11, 11': 'black',\r\n            '11, 12': 'black',\r\n            '11, 13': 'black',\r\n            '12, 3': 'black',\r\n            '12, 8': 'black',\r\n            '12, 10': 'black',\r\n            '12, 15': 'black',\r\n            '13, 3': 'black',\r\n            '13, 8': 'black',\r\n            '13, 10': 'black',\r\n            '13, 15': 'black',\r\n            '14, 3': 'black',\r\n            '14, 8': 'black',\r\n            '14, 10': 'black',\r\n            '14, 15': 'black',\r\n            '16, 5': 'black',\r\n            '16, 6': 'black',\r\n            '16, 7': 'black',\r\n            '16, 11': 'black',\r\n            '16, 12': 'black',\r\n            '16, 13': 'black',\r\n        })\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(4*20, 5*20, 19, 19);\r\n        ctx.fillRect(4*20, 6*20, 19, 19);\r\n        ctx.fillRect(4*20, 7*20, 19, 19);\r\n        ctx.fillRect(4*20, 11*20, 19, 19);\r\n        ctx.fillRect(4*20, 12*20, 19, 19);\r\n        ctx.fillRect(4*20, 13*20, 19, 19);\r\n        ctx.fillRect(6*20, 3*20, 19, 19);\r\n        ctx.fillRect(6*20, 8*20, 19, 19);\r\n        ctx.fillRect(6*20, 10*20, 19, 19);\r\n        ctx.fillRect(6*20, 15*20, 19, 19);\r\n        ctx.fillRect(7*20, 3*20, 19, 19);\r\n        ctx.fillRect(7*20, 8*20, 19, 19);\r\n        ctx.fillRect(7*20, 10*20, 19, 19);\r\n        ctx.fillRect(7*20, 15*20, 19, 19);\r\n        ctx.fillRect(8*20, 3*20, 19, 19);\r\n        ctx.fillRect(8*20, 8*20, 19, 19);\r\n        ctx.fillRect(8*20, 10*20, 19, 19);\r\n        ctx.fillRect(8*20, 15*20, 19, 19);\r\n        ctx.fillRect(9*20, 5*20, 19, 19);\r\n        ctx.fillRect(9*20, 6*20, 19, 19);\r\n        ctx.fillRect(9*20, 7*20, 19, 19);\r\n        ctx.fillRect(9*20, 11*20, 19, 19);\r\n        ctx.fillRect(9*20, 12*20, 19, 19);\r\n        ctx.fillRect(9*20, 13*20, 19, 19);\r\n        ctx.fillRect(11*20, 5*20, 19, 19);\r\n        ctx.fillRect(11*20, 6*20, 19, 19);\r\n        ctx.fillRect(11*20, 7*20, 19, 19);\r\n        ctx.fillRect(11*20, 11*20, 19, 19);\r\n        ctx.fillRect(11*20, 12*20, 19, 19);\r\n        ctx.fillRect(11*20, 13*20, 19, 19);\r\n        ctx.fillRect(12*20, 3*20, 19, 19);\r\n        ctx.fillRect(12*20, 8*20, 19, 19);\r\n        ctx.fillRect(12*20, 10*20, 19, 19);\r\n        ctx.fillRect(12*20, 15*20, 19, 19);\r\n        ctx.fillRect(13*20, 3*20, 19, 19);\r\n        ctx.fillRect(13*20, 8*20, 19, 19);\r\n        ctx.fillRect(13*20, 10*20, 19, 19);\r\n        ctx.fillRect(13*20, 15*20, 19, 19);\r\n        ctx.fillRect(14*20, 3*20, 19, 19);\r\n        ctx.fillRect(14*20, 8*20, 19, 19);\r\n        ctx.fillRect(14*20, 10*20, 19, 19);\r\n        ctx.fillRect(14*20, 15*20, 19, 19);\r\n        ctx.fillRect(16*20, 5*20, 19, 19);\r\n        ctx.fillRect(16*20, 6*20, 19, 19);\r\n        ctx.fillRect(16*20, 7*20, 19, 19);\r\n        ctx.fillRect(16*20, 11*20, 19, 19);\r\n        ctx.fillRect(16*20, 12*20, 19, 19);\r\n        ctx.fillRect(16*20, 13*20, 19, 19);\r\n    }\r\n\r\n    twiceSpeed = () => {\r\n        this.setState({speed: 250});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"grid\">\r\n                <h1>Generation: {this.state.generation}</h1>\r\n                <canvas className='canvas' ref='canvas' />\r\n                <div>\r\n                    <button onClick={this.play}>Play Once</button>\r\n                    <button onClick={this.loop}>Loop</button>\r\n                    <button onClick={this.pause}>Pause</button>\r\n                    <button onClick={this.clearGrid}>Clear</button>\r\n                    <button onClick={this.halfSpeed}>Half Speed</button>\r\n                    <button onClick={this.normalSpeed}>Normal Speed</button>\r\n                    <button onClick={this.twiceSpeed}>2x Speed</button>\r\n                </div>\r\n                <div>\r\n                    <h1>Sample Presets:</h1>\r\n                    <button onClick={this.beacon}>Beacon</button>\r\n                    <button onClick={this.pulsar}>Pulsar</button>\r\n                    <button onClick={this.penta}>Pentadecathlon</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Rules = () => {\r\n    return(\r\n        <div>\r\n            <h1>Rules:</h1>\r\n            <h2>Survival:</h2>\r\n            <p>If a cell is alive and has 2 or 3 living neighors, it survives and moves on to the next generation.</p>\r\n            <h2>Birth:</h2>\r\n            <p>If a cell is dead and has exactly 3 living neighbors, it comes to life in the next generation.</p>\r\n            <h2>Death:</h2>\r\n            <p>If a cell is alive and has less than 2 living neighbors or more than 3 living neighbors, it dies and is shown as a dead cell in the next generation.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\n\r\nconst History = () => {\r\n    return(\r\n        <div>\r\n            <h1>About this Algorithm:</h1>\r\n            <p>The Game of Life is a cellular automaton created by the British mathematician John Horton Conway in 1970.\r\n                Conway was motivated by his interest in mathematical logic and simulation games made by Stanislaw Ulam. Ulam\r\n                himself was inspired by John von Neumann and made his simulations according to Neumann's work.\r\n                In the 1940s, Neumann defined life as a creation which can reproduce itself and simulate a Turing machine.\r\n                Turing completeness states that a system is turing complete if it can simulate a turing machine. A Turing machine \r\n                can compute anything a computer can.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\nimport Grid from './components/Grid';\nimport Rules from './components/Rules';\nimport History from './components/History';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Conway's Game of Life</h1>\n        <Grid />\n        <Rules />\n        <History />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// setInterval(function, delay)\n// Starts repeatedly executing the function specified by function every delay milliseconds.\n\n// requestAnimationFrame(callback)\n// Tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint.","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}